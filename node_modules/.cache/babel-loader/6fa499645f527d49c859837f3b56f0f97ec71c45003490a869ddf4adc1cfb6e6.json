{"ast":null,"code":"import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\n// Define the root state type based on the rootReducer\n\n// First, create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\n// Enable Redux Devtools which helps developers understand Redux via UI format\nconst devtool = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// Now create the global store with the rootReducer and applyMiddleware\nconst store = createStore(rootReducer, devtool(applyMiddleware(sagaMiddleware)));\n\n// Run the rootSaga to start listening to actions\nsagaMiddleware.run(rootSaga);\nexport default store;\n\n// Now you can use this store in your application and connect components with it using react-redux.","map":{"version":3,"names":["applyMiddleware","compose","createStore","createSagaMiddleware","rootReducer","rootSaga","sagaMiddleware","devtool","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","run"],"sources":["/home/lenovo/Videos/Learning Videos/my youtube video/New Folder/redux-saga-typescript/src/Component/Redux/store.ts"],"sourcesContent":["import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\n// Define the root state type based on the rootReducer\ntype RootState = ReturnType<typeof rootReducer>;\n\n// First, create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\n// Enable Redux Devtools which helps developers understand Redux via UI format\nconst devtool = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// Now create the global store with the rootReducer and applyMiddleware\nconst store = createStore(rootReducer, devtool(applyMiddleware(sagaMiddleware)));\n\n// Run the rootSaga to start listening to actions\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n\n// Now you can use this store in your application and connect components with it using react-redux.\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AAC7D,OAAOC,oBAAoB,MAAM,YAAY;AAC7C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,YAAY;;AAEjC;;AAGA;AACA,MAAMC,cAAc,GAAGH,oBAAoB,CAAC,CAAC;;AAE7C;AACA,MAAMI,OAAO,GAAIC,MAAM,CAASC,oCAAoC,IAAIR,OAAO;;AAE/E;AACA,MAAMS,KAAK,GAAGR,WAAW,CAACE,WAAW,EAAEG,OAAO,CAACP,eAAe,CAACM,cAAc,CAAC,CAAC,CAAC;;AAEhF;AACAA,cAAc,CAACK,GAAG,CAACN,QAAQ,CAAC;AAE5B,eAAeK,KAAK;;AAEpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}