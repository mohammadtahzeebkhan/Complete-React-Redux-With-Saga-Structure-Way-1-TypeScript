{"ast":null,"code":"// actions.ts\n\nexport const FETCH_USERS_REQUEST = \"FETCH_USERS_REQUEST\";\nexport const FETCH_USERS_SUCCESS = \"FETCH_USERS_SUCCESS\";\nexport const FETCH_USERS_FAILURE = \"FETCH_USERS_FAILURE\";\n\n// Define UserRequestData type\n\n// Define action types\n\n// Define the User type to represent your user data structure\n\n// Create a union type of all possible action types\n\n// Define the action creators with type annotations\n\nexport const fetchUserRequest = requestData => {\n  console.log(\"fetchUserRequest myurldata---->\", requestData);\n  return {\n    type: FETCH_USERS_REQUEST,\n    data: requestData\n  };\n};\nexport const fetchUserSuccess = userdata => {\n  console.log(\"userData\", userdata);\n  return {\n    type: FETCH_USERS_SUCCESS,\n    userdata\n  };\n};\nexport const fetchUserFailure = error => {\n  return {\n    type: FETCH_USERS_FAILURE,\n    error\n  };\n};","map":{"version":3,"names":["FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","fetchUserRequest","requestData","console","log","type","data","fetchUserSuccess","userdata","fetchUserFailure","error"],"sources":["/home/lenovo/Videos/Learning Videos/my youtube video/New Folder/redux-saga-typescript/src/Component/UserPage/action.ts"],"sourcesContent":["// actions.ts\n\nexport const FETCH_USERS_REQUEST = \"FETCH_USERS_REQUEST\";\nexport const FETCH_USERS_SUCCESS = \"FETCH_USERS_SUCCESS\";\nexport const FETCH_USERS_FAILURE = \"FETCH_USERS_FAILURE\";\n\n// Define UserRequestData type\nexport interface UserRequestData {\n  url: string;\n  method: string;\n  header:string,\n  payload:any\n  handleError: (error: any) => void;\n  handleResponse: (response: any) => void;\n  // Add other properties if needed\n}\n\n// Define action types\nexport interface FetchUsersRequestAction {\n  type: typeof FETCH_USERS_REQUEST;\n  data: UserRequestData;\n}\n\ninterface FetchUsersSuccessAction {\n  type: typeof FETCH_USERS_SUCCESS;\n  userdata: User[]; // Replace 'User[]' with the appropriate type for userdata\n}\n\ninterface FetchUsersFailureAction {\n  type: typeof FETCH_USERS_FAILURE;\n  error: any; // Replace 'any' with the appropriate type for error\n}\n\n// Define the User type to represent your user data structure\nexport interface User {\n  // Define the properties of your user data here\n  user:any\n}\n\n// Create a union type of all possible action types\nexport type UserActionTypes =\n  | FetchUsersRequestAction\n  | FetchUsersSuccessAction\n  | FetchUsersFailureAction;\n\n// Define the action creators with type annotations\n\nexport const fetchUserRequest = (requestData: UserRequestData): FetchUsersRequestAction => {\n  console.log(\"fetchUserRequest myurldata---->\", requestData);\n  return {\n    type: FETCH_USERS_REQUEST,\n    data: requestData,\n  };\n};\n\nexport const fetchUserSuccess = (userdata: any): FetchUsersSuccessAction => {\n    console.log(\"userData\",userdata)\n  return {\n    type: FETCH_USERS_SUCCESS,\n    userdata,\n  };\n};\n\nexport const fetchUserFailure = (error: any): FetchUsersFailureAction => {\n  return {\n    type: FETCH_USERS_FAILURE,\n    error,\n  };\n};\n"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;;AAExD;;AAWA;;AAgBA;;AAMA;;AAMA;;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,WAA4B,IAA8B;EACzFC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,WAAW,CAAC;EAC3D,OAAO;IACLG,IAAI,EAAEP,mBAAmB;IACzBQ,IAAI,EAAEJ;EACR,CAAC;AACH,CAAC;AAED,OAAO,MAAMK,gBAAgB,GAAIC,QAAa,IAA8B;EACxEL,OAAO,CAACC,GAAG,CAAC,UAAU,EAACI,QAAQ,CAAC;EAClC,OAAO;IACLH,IAAI,EAAEN,mBAAmB;IACzBS;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAIC,KAAU,IAA8B;EACvE,OAAO;IACLL,IAAI,EAAEL,mBAAmB;IACzBU;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}